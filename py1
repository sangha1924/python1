from cryptography.fernet import Fernet

# Generate a symmetric encryption key
def generate_key():
    return Fernet.generate_key()

# Encrypt data
def encrypt_data(data, key):
    cipher_suite = Fernet(key)
    encrypted_data = cipher_suite.encrypt(data.encode())
    return encrypted_data

# Decrypt data
def decrypt_data(encrypted_data, key):
    cipher_suite = Fernet(key)
    decrypted_data = cipher_suite.decrypt(encrypted_data).decode()
    return decrypted_data

# Example usage:
data_to_encrypt = "Sensitive information"
encryption_key = generate_key()
encrypted_data = encrypt_data(data_to_encrypt, encryption_key)
decrypted_data = decrypt_data(encrypted_data, encryption_key)
print("Original Data:", data_to_encrypt)
print("Encrypted Data:", encrypted_data)
print("Decrypted Data:", decrypted_data)
